import gspread_db
from PyDictionary import PyDictionary
from google.oauth2.service_account import Credentials
from kivy.lang import Builder
from kivy.uix.scrollview import ScrollView
from kivymd.uix.boxlayout import MDBoxLayout
from kivymd.app import MDApp
from kivymd.uix.label import MDLabel
from kivy.properties import ObjectProperty, StringProperty

root_kv = """
<ScrollableCard>:
    lbl_word: lbl_word
    lbl_type: lbl_type
    lbl_meaning: lbl_meaning                
    MDCard:
        id: card_meaning
        orientation: "vertical"
        padding: "8dp"                                    
                                                                                            
        MDLabel:
            id: lbl_word
            name: "lbl_word"
            font_style: "H6"
            size_hint_y: None
            padding: 10,10
            height: self.texture_size[1]
            
        MDSeparator:
            height: "1dp"
                            
        MDLabel:
            id: lbl_type
            font_style: "Body1"
            size_hint_y: None
            padding: 10,10
            height: self.texture_size[1]
        
        MDSeparator:
            height: "1dp"
            
        MDLabel:
            id: lbl_meaning
            font_style: "Body1"
            size_hint_y: None
            padding: 10,10
            height: self.texture_size[1]
            
BoxLayout:
    orientation: "vertical"

    MDToolbar:
        id: toolbar
        title: "Wordie"
        md_bg_color: app.theme_cls.primary_color


    MDBottomNavigation:
        id: panel

        MDBottomNavigationItem:
            name: "files1"
            text: "Word"
            icon: "card-text"

            BoxLayout:
                orientation: "vertical"
                size_hint_y: None
                height: self.minimum_height
                spacing: dp(10)
                pos_hint: {"center_x": .5, "center_y": .5}

                MDTextField:
                    id: tf_word
                    hint_text: "Enter Word"
                    pos_hint: {'center_x':0.5,'center_y':0.6}

                MDRectangleFlatButton
                    id: btn_search
                    text: "Search"
                    pos_hint: {'center_x':0.5,'center_y':0.4}
                    halign: "center"
                    on_release:
                        panel.ids.sc.create_meaning(tf_word.text)
                        panel.switch_tab("files2")

        MDBottomNavigationItem:
            name: "files2"
            text: "Meaning"
            icon: "clipboard-text"
            
            MDBoxLayout:
                orientation: "vertical"                                                
                spacing: "5dp"
                
                            
                ScrollableCard:
                    id: sc
                    
                   
        MDBottomNavigationItem:
            name: "files3"
            text: "JS"
            icon: "language-javascript"

            MDLabel:
                font_style: "Body1"
                theme_text_color: "Primary"
                text: "Oh god JS again"
                halign: "center"
                    
"""


class ScrollableCard(ScrollView):
    lbl_word = ObjectProperty()
    lbl_type = ObjectProperty()
    lbl_meaning = ObjectProperty()

    def create_meaning(self, instance):

        dictionary = PyDictionary(self.root.ids.tf_word.text)
        dic = dictionary.getMeanings()

        scopes = [
            'https://www.googleapis.com/auth/spreadsheets',
            'https://www.googleapis.com/auth/drive'
        ]

        credentials = Credentials.from_service_account_file(
            'wordie-credentials.json',
            scopes=scopes
        )
        client = gspread_db.authorize(credentials)
        db = client.open("wordie")
        if db.table_exists(table_name="wordie_db"):
            print("Yes it exists")
            wordie_dbu = db['wordie_db']
        else:
            print("It does not exist")
            db.create_table(table_name='wordie_db', header=['word', 'meaning'])
            wordie_dbu = db['wordie_db']

        for key in dic.keys():

            # Print the word itself

            self.root.ids.lbl_word.text = key.capitalize() + ':'

            print(key.capitalize() + ':')

            for k in dic[key].keys():

                # Print whether it is Noun or Verb etc

                item_key = MDLabel(text=k + ':')
                self.root.ids.card_meaning.add_widget(item_key)
                print(k + ':')

                # Probably for each line in the string

                wordie_dbu.insert({'word': key.capitalize(), 'meaning': str(dic[key][k])})

                for m in dic[key][k]:
                    item_m = MDLabel(text=m)
                    self.root.ids.card_meaning.add_widget(item_m)
                    print(m)


class MainApp(MDApp):
    def __init__(self, **kwargs):
        self.title = "wordie"
        super().__init__(**kwargs)

    def callback(self, instance):
        self.root.ids.panel.switch_tab(instance.text)

    def build(self):
        self.root = Builder.load_string(root_kv)


if __name__ == "__main__":
    MainApp().run()
